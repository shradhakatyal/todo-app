{"version":3,"sources":["Components/Todo/Todo.js","Components/TodoForm/TodoForm.js","App.js","index.js"],"names":["Todo","todo","index","completeTodo","deleteTodo","className","isCompleted","text","onClick","TodoForm","addTodo","useState","value","setValue","onSubmit","e","preventDefault","type","placeholder","onChange","target","App","storedTodos","localStorage","getItem","JSON","parse","length","todos","setTodos","newTodos","setItem","stringify","splice","map","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ySAgBeA,G,YAZF,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,KAAMC,EAAsC,EAAtCA,MAAOC,EAA+B,EAA/BA,aAAcC,EAAiB,EAAjBA,WACzC,OACE,yBAAKC,UAAWJ,EAAKK,YAAc,iBAAmB,QACpD,2BAAIL,EAAKM,MACT,yBAAKF,UAAU,oBACb,4BAAQA,UAAU,kBAAkBG,QAAS,kBAAML,EAAaD,KAAhE,YACA,4BAAQG,UAAU,gBAAgBG,QAAS,kBAAMJ,EAAWF,KAA5D,cCoBOO,G,MA1BE,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAAc,EACNC,mBAAS,IADH,mBACzBC,EADyB,KAClBC,EADkB,KAYhC,OACE,0BAAMC,SAVa,SAAAC,GACnBA,EAAEC,iBACEJ,IAGJF,EAAQE,GACRC,EAAS,OAKP,2BACAI,KAAK,OACLC,YAAY,WACZb,UAAU,QACVO,MAAOA,EACPO,SAAU,SAAAJ,GAAC,OAAIF,EAASE,EAAEK,OAAOR,UAEjC,4BAAQP,UAAU,mBAAlB,UC4BSgB,EA9CH,WAEV,IAAMC,EAAcC,aAAaC,QAAQ,SAFzB,EAGWb,mBAASW,GAAeG,KAAKC,MAAMJ,GAAaK,OAASF,KAAKC,MAAMJ,GAAe,IAH9F,mBAGTM,EAHS,KAGFC,EAHE,KAWV1B,EAAe,SAAAD,GACnB,IAAM4B,EAAQ,YAAOF,GACrBE,EAAS5B,GAAOI,aAAc,EAC9BuB,EAASC,GACTP,aAAaQ,QAAQ,QAASN,KAAKO,UAAUF,KAGzC1B,EAAa,SAAAF,GACjB,IAAM4B,EAAQ,YAAOF,GACrBE,EAASG,OAAO/B,EAAO,GACvB2B,EAASC,GACTP,aAAaQ,QAAQ,QAASN,KAAKO,UAAUF,KAG/C,OACE,yBAAKzB,UAAU,OACb,wBAAIA,UAAU,WAAd,aACA,yBAAKA,UAAU,aAEXuB,EAAMM,KAAI,SAACjC,EAAMC,GAAP,OACR,kBAAC,EAAD,CACAiC,IAAKjC,EACLA,MAAOA,EACPD,KAAMA,EACNE,aAAcA,EACdC,WAAYA,OAIhB,kBAAC,EAAD,CAAUM,QAnCA,SAAAH,GACd,IAAMuB,EAAQ,sBAAOF,GAAP,CAAc,CAAErB,UAC9BsB,EAASC,GACTP,aAAaQ,QAAQ,QAASN,KAAKO,UAAUF,UCVjDM,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.89731b07.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Todo.scss';\n\nconst Todo = ({ todo, index, completeTodo, deleteTodo }) => {\n  return (\n    <div className={todo.isCompleted ? 'todo completed' : 'todo'}>\n      <p>{todo.text}</p>\n      <div className='button-container'>\n        <button className='complete-button' onClick={() => completeTodo(index)}>Complete</button>\n        <button className='delete-button' onClick={() => deleteTodo(index)}>Delete</button>\n      </div>\n    </div>\n  );\n}\n\nexport default Todo;","import React, { useState } from 'react';\n\nimport './TodoForm.scss';\n\nconst TodoForm = ({ addTodo }) => {\n  const [value, setValue] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if(!value) {\n      return;\n    }\n    addTodo(value);\n    setValue('');\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n      type='text'\n      placeholder='Add task'\n      className='input'\n      value={value}\n      onChange={e => setValue(e.target.value)}\n      />\n      <button className='add-todo-button'>Add</button>\n    </form>\n  );\n}\n\nexport default TodoForm;","import React, { useState } from 'react';\n\nimport './App.scss';\nimport Todo from './Components/Todo/Todo';\nimport TodoForm from './Components/TodoForm/TodoForm';\n\n\nconst App = () => {\n  // useState gives us two things - the value and a function that modifies that value. It can be thought of as this.state and this.setState in class based components.\n  const storedTodos = localStorage.getItem('todos');\n  const [todos, setTodos ] = useState(storedTodos && JSON.parse(storedTodos).length ? JSON.parse(storedTodos) : []);\n\n  const addTodo = text => {\n    const newTodos = [...todos, { text }];\n    setTodos(newTodos);\n    localStorage.setItem('todos', JSON.stringify(newTodos));\n  }\n\n  const completeTodo = index => {\n    const newTodos = [...todos];\n    newTodos[index].isCompleted = true;\n    setTodos(newTodos);\n    localStorage.setItem('todos', JSON.stringify(newTodos));\n  }\n\n  const deleteTodo = index => {\n    const newTodos = [...todos];\n    newTodos.splice(index, 1);\n    setTodos(newTodos);\n    localStorage.setItem('todos', JSON.stringify(newTodos));\n  }\n\n  return (\n    <div className='app'>\n      <h1 className='heading'>Task List</h1>\n      <div className='todo-list'>\n        {\n          todos.map((todo, index) => (\n            <Todo\n            key={index}\n            index={index}\n            todo={todo}\n            completeTodo={completeTodo}\n            deleteTodo={deleteTodo}\n            />\n          ))\n        }\n        <TodoForm addTodo={addTodo} />\n      </div>\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}